cmake_minimum_required(VERSION 3.8)
project(village_operator)
set(CMAKE_CXX_STANDARD 17)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rcl_interfaces REQUIRED)
find_package(village_interfaces REQUIRED)
find_package(std_msgs REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  set(CMAKE_BUILD_TYPE Debug)
  add_compile_options(-g)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()

add_executable(operator_node src/operator.cpp)
ament_target_dependencies(operator_node 
  rclcpp
  std_msgs
  rcl_interfaces
  village_interfaces)

install(TARGETS 
  operator_node
  DESTINATION lib/${PROJECT_NAME}
  )


# 安装包描述文件
install(FILES package.xml
  DESTINATION share/${PROJECT_NAME}
)